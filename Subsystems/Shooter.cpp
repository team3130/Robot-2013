// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Shooter.h"
#include "../Robotmap.h"
Shooter::Shooter() : Subsystem("Shooter") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	indexer = RobotMap::shooterIndexer;
	flipper = RobotMap::shooterFlipper;
	topShooter = RobotMap::shooterTopShooter;
	bottomShooter = RobotMap::shooterBottomShooter;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Shooter::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	// SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Shooter::FlipperUp() {
	indexer->Set(true);
}
void Shooter::FlipperDown() {
	indexer->Set(false);
}
void Shooter::IndexerOut() {
	indexer->Set(true);
}
void Shooter::IndexerIn() {
	indexer->Set(false);
}
/*
 * Sets the shooter to the desired voltage.  Uses the battery voltage for estimating proper pwm value.
 */
void Shooter::SetShooterSpeed(double speed) {
	double voltage = DriverStation::GetInstance()->GetBatteryVoltage() - 1.0;
	speed = speed / voltage;
	topShooter->Set(speed);
	bottomShooter->Set(speed);
}
bool Shooter::IsRunning() {
	return (topShooter->Get() > 0.1);
}
